{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","isDisabled","setIsDisabled","className","onClick","fetch","then","response","text","result","catUrl","JSON","parse","url","catch","error","console","log","disabled","src","alt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAsCeA,MAjCf,WAAgB,IAAD,EACaC,mBAJX,6MAGF,mBACNC,EADM,KACCC,EADD,OAEuBF,oBAAS,GAFhC,mBAENG,EAFM,KAEMC,EAFN,KAsBb,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,wBAAQC,QApBM,WAClBF,GAAc,GAEdG,MAVc,8CAWbC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAEMC,EAFgBC,KAAKC,MAAMH,GACA,GACPI,IAC1Bb,EAASU,GACTR,GAAc,MAEfY,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAQMG,SAAUjB,EAAxC,+CACA,wBACA,qBAAKkB,IAAKpB,EAAOqB,IAAI,MAAMC,MAAM,gBCpB1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6c44d961.chunk.js","sourcesContent":["import React, {useState} from \"react\";\n// import './App.css';\nconst catImage = \"https://imgr.search.brave.com/BoJz0YTDWVhZ4lR8Mz4FU3OQx2B84A9zq0TVs4JflZg/fit/1200/1200/ce/1/aHR0cHM6Ly9pLnBp/bmltZy5jb20vb3Jp/Z2luYWxzLzY4Lzc0/LzM1LzY4NzQzNTBi/ZjE4MzlkNzdiZDlm/MDA1NWFiMzE3Yzlj/LmpwZw\"\nconst catApiUrl = \"https://api.thecatapi.com/v1/images/search\"\n\nfunction App() {\n  const [image, setImage] = useState(catImage)\n  const [isDisabled, setIsDisabled] = useState(false)\n\n\n  const setCatImage = () => {\n    setIsDisabled(true);\n\n    fetch(catApiUrl)\n    .then(response => response.text())\n    .then(result => {\n      const catsDataArray = JSON.parse(result);\n      const catsObject = catsDataArray[0];\n      const catUrl = catsObject.url;\n      setImage(catUrl);\n      setIsDisabled(false)\n    })\n    .catch(error => console.log(error))\n  }\n\n  \n\n  return (\n    <div className=\"app\">\n      <div className=\"app-main\">\n        <button onClick={setCatImage} disabled={isDisabled}>Chodz zobaczyc kotka w piwnicy :3</button>\n        <div></div>\n        <img src={image} alt=\"cos\" width=\"300px\"/> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}